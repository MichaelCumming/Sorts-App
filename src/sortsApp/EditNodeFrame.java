/*
 * EditNodeFrame.java
 *
 * Created on May 28, 2004, 9:12 AM
 */

package sortsApp;

import com.touchgraph.graphlayout.sNode.*;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.Vector;
import javax.swing.*;
import com.touchgraph.graphlayout.*;
import sortsApp.SortsTerms.SORT_TYPE;


/**
 *
 * @author  cumming
 */
public class EditNodeFrame extends javax.swing.JFrame {
    private TGPanel tgPanel;
    private Node popupNode;
    SortsTerms terms = new SortsTerms();
    
    /** Creates new form EditNodeFrame */
    public EditNodeFrame(TGPanel tgPanel, Node popupNode) {
        this.tgPanel = tgPanel;
        this.popupNode = popupNode;
        initComponents();
        setBackground(terms.GLPANEL_COLOR);
        setTitle("Edit Node");
        Node selectNode = tgPanel.getSelect();
        SORT_TYPE sortTypeSelect = null;
        if(selectNode instanceof sNode) {
            sNode selectSortNode = (sNode)selectNode;
            sortTypeSelect = selectSortNode.getSortType();
        }
        pack();
        setPosition(this.getWidth(), this.getHeight(), this);
        //sortTypeComboBox.setModel(new DefaultComboBoxModel(new Vector(terms.ALL_SORT_DESCRIPTIONS())));
        sortTypeComboBox.setModel(new DefaultComboBoxModel(SORT_TYPE.values()));
        sortTypeComboBox.setMaximumRowCount(terms.DEFAULT_ROW_COUNT);
        setComboBoxToPopupNode();
        String sortLabel = popupNode.getLabel();
        nodeLabelTextField.setText(sortLabel);
        show();
    }
    
    /**Sets item shown in the combobox to the current popupNode */
    public void setComboBoxToPopupNode() {
        if(popupNode instanceof sNode) {
            sNode sortNode = (sNode)popupNode;
            SORT_TYPE currentType = sortNode.getSortType();
            sortTypeComboBox.setSelectedIndex(currentType.ordinal());
        }
    }
    
    /** Sets position */
    public void setPosition(int width, int height, JFrame frame) {
        Dimension frameSize = frame.getSize();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        frame.setLocation((screenSize.width - width) / 2, (screenSize.height - height) / 2);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        sortTypeComboBox = new javax.swing.JComboBox();
        buttonsPanel = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        comboBoxLabel = new javax.swing.JLabel();
        nodeNameLabel = new javax.swing.JLabel();
        nodeLabelTextField = new javax.swing.JTextField();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        sortTypeComboBox.setFont(new java.awt.Font("Arial", 0, 10));
        sortTypeComboBox.setPreferredSize(new java.awt.Dimension(169, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        getContentPane().add(sortTypeComboBox, gridBagConstraints);

        buttonsPanel.setLayout(new java.awt.GridBagLayout());

        cancelButton.setFont(new java.awt.Font("Arial", 1, 12));
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        buttonsPanel.add(cancelButton, new java.awt.GridBagConstraints());

        okButton.setFont(new java.awt.Font("Arial", 1, 12));
        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        buttonsPanel.add(okButton, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        getContentPane().add(buttonsPanel, gridBagConstraints);

        comboBoxLabel.setFont(new java.awt.Font("Arial", 1, 12));
        comboBoxLabel.setText("Node Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        getContentPane().add(comboBoxLabel, gridBagConstraints);

        nodeNameLabel.setFont(new java.awt.Font("Arial", 1, 12));
        nodeNameLabel.setText("Node Label");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        getContentPane().add(nodeNameLabel, gridBagConstraints);

        nodeLabelTextField.setColumns(15);
        nodeLabelTextField.setFont(new java.awt.Font("Arial", 0, 12));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        getContentPane().add(nodeLabelTextField, gridBagConstraints);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents
    
    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        // Add your handling code here: formerly in GLEditUI: line 678
        /**Get user input */
        String newLabel = new String(nodeLabelTextField.getText());
        //String sortDescSelected = (String)sortTypeComboBox.getSelectedItem();
        SORT_TYPE newType = (SORT_TYPE)sortTypeComboBox.getSelectedItem();
        
        /**Set attributes */
        popupNode.setLabel(newLabel);
        /**Sets all sorts attributes */
        ((sNode)popupNode).setSortType(newType);
        //popupNode.setSortTypeAllAttributesUsingDesc(sortDescSelected);
        /**Whenever nodes are edited, their outgoing edges are updated */
        //popupNode.updateOutgoingSortEdges();
        //popupNode.updateIncomingSortEdges();
        
        tgPanel.repaint();
        dispose();
    }//GEN-LAST:event_okButtonActionPerformed
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // Add your handling code here:
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        //System.exit(0);
        dispose();
    }//GEN-LAST:event_exitForm
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel comboBoxLabel;
    private javax.swing.JTextField nodeLabelTextField;
    private javax.swing.JLabel nodeNameLabel;
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox sortTypeComboBox;
    // End of variables declaration//GEN-END:variables
    
}
