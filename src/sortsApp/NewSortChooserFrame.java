/*
 * NewSortChoserPanel.java
 *
 * Created on September 2, 2003, 2:00 PM
 */

package sortsApp;

import com.touchgraph.graphlayout.sNode.*;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import com.touchgraph.graphlayout.*;
import sortsApp.*;
import javax.swing.*;
import sortsApp.SortsTerms.SORT_TYPE;

/**
 *
 * @author  cumming
 */
public class NewSortChooserFrame extends JFrame {
    public String newSortTypeSelected;
    private Node dragAddNode; //node dragging from
    private TGPanel tgPanel; //panel where drawing takes place
    private GraphLayoutTopFrame topFrame;
    private SortsTerms terms = new SortsTerms();
    private BusinessLogic logic;
    
    /** Creates new form NewSortChoserPanel */
    public NewSortChooserFrame(Node dragAddNode, TGPanel tgPanel) {
        this.dragAddNode = dragAddNode;
        this.tgPanel = tgPanel;
        this.topFrame = tgPanel.getTopFrame();
        this.logic = new BusinessLogic();
        Dimension frameSize = this.getSize();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation((screenSize.width - frameSize.width) / 2, (screenSize.height - frameSize.height) / 2);
        initComponents();
        //sortTypesComboBox.setModel(new DefaultComboBoxModel(new Vector(terms.ALL_SORT_DESCRIPTIONS())));
        sortTypesComboBox.setModel(new DefaultComboBoxModel(SORT_TYPE.values()));
        sortTypesComboBox.setMaximumRowCount(terms.DEFAULT_ROW_COUNT);
        /**Set default index to the first item: UNDEFINED */
        sortTypesComboBox.setSelectedIndex(0);
    }
    
    public void setSize() {
        int width = 500;
        int height = 900;
        Dimension frameSize = this.getSize();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation((screenSize.width - width) / 2, (screenSize.height - height) / 2);
        pack();
    }
    
    public boolean newNodeLogicOK(SORT_TYPE typeSelected) {
        //String selectedDesc = (String)sortTypesComboBox.getSelectedItem();
        //SORT_TYPE sortTypeSelected = terms.getTypeFromDescription(selectedDesc);
        String checkMessage = logic.getParentChildMessage((sNode)dragAddNode, typeSelected);
        
        if (!checkMessage.equals("ok")) {
            JOptionPane.showMessageDialog(this, checkMessage);
            dispose();
            return false;
        }
        return true;
    }
    
    public void addSortEdge(Node src, Node dest) {
        Edge newEdge = tgPanel.addEdge(src, dest, terms.EDGE_DEFAULT_LENGTH);
        /**Sets sort type, color, and attribute marking */
        //add edge sets SortAttributes
        //newEdge.setSortAttributes();
        
        //dest.drawx = tgPanel.getMousePos().x;
        //dest.drawy = tgPanel.getMousePos().y;
        //tgPanel.updatePosFromDraw(dest);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        topPanel = new javax.swing.JPanel();
        sortTypesComboBox = new javax.swing.JComboBox();
        buttonsPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setTitle("Choose New Sort Type");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        sortTypesComboBox.setFont(new java.awt.Font("Arial", 0, 12));
        sortTypesComboBox.setPreferredSize(new java.awt.Dimension(169, 19));
        topPanel.add(sortTypesComboBox);

        getContentPane().add(topPanel, new java.awt.GridBagConstraints());

        okButton.setFont(new java.awt.Font("Arial", 1, 12));
        okButton.setText("OK");
        okButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                okButtonMouseClicked(evt);
            }
        });

        buttonsPanel.add(okButton);

        cancelButton.setFont(new java.awt.Font("Arial", 1, 12));
        cancelButton.setText("Cancel");
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelButtonMouseClicked(evt);
            }
        });

        buttonsPanel.add(cancelButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        getContentPane().add(buttonsPanel, gridBagConstraints);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents
    
    private void cancelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseClicked
        // Add your handling code here:
        //System.exit(0); gets rid of parent app too
        this.dispose();
    }//GEN-LAST:event_cancelButtonMouseClicked
    
    private void okButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okButtonMouseClicked
        //Add your handling code here:
        /**this is only called if dragging from an existing node into empty space */
        //String selectedDesc = (String)sortTypesComboBox.getSelectedItem();
        //SORT_TYPE typeSelected = terms.getTypeFromDescription(selectedDesc);
        SORT_TYPE typeSelected = (SORT_TYPE)sortTypesComboBox.getSelectedItem();
        
        try {
            if(newNodeLogicOK(typeSelected)) {
                //String newNodePrefix = null; //FIX THIS
                //String newNodePrefix = terms.getDefaultPrefixFromDescription(selectedDesc);
                String newNodePrefix = typeSelected.getDefaultPrefix();
                
                //Node newNode = tgPanel.addNodeSorts(typeSelected, tgPanel.newNodeName(newNodePrefix));
                
                /**revised 10.May 2005 */
                sNode newNode = tgPanel.addNodeSorts(typeSelected, tgPanel.newNodeName(newNodePrefix));
                addSortEdge(dragAddNode, newNode);
                
            }
            dispose();
            
        } catch (TGException tge) {
            System.err.println(tge.getMessage());
            tge.printStackTrace(System.err);
        }
        
        //    //Node n = tgPanel.addNode();
        //    tgPanel.addEdge(dragAddNode, n, Edge.DEFAULT_LENGTH);
        //    n.drawx = tgPanel.getMousePos().x;
        //    n.drawy = tgPanel.getMousePos().y;
        //   tgPanel.updatePosFromDraw(n);
        //}
        
    }//GEN-LAST:event_okButtonMouseClicked
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        //System.exit(0); //gets rid of parent app too -- too much
        this.dispose();
    }//GEN-LAST:event_exitForm
    
    /** Getter for property topFrame.
     * @return Value of property topFrame.
     *
     */
    public sortsApp.GraphLayoutTopFrame getTopFrame() {
        return topFrame;
    }
    
    /** Setter for property topFrame.
     * @param topFrame New value of property topFrame.
     *
     */
    public void setTopFrame(sortsApp.GraphLayoutTopFrame topFrame) {
        this.topFrame = topFrame;
    }
    
    /**
     * @param args the command line arguments
     */
    //    public static void main(String args[]) {
    //        new NewSortChooserFrame(Node n, TGPanel tgp).show();
    //    }
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox sortTypesComboBox;
    private javax.swing.JPanel topPanel;
    // End of variables declaration//GEN-END:variables
    
}
